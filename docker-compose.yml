version: '3.8'

services:
  # MongoDB service
  mongodb:
    image: mongo:7-jammy
    container_name: wazabz_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-wazabz-discord-bot}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - wazabz_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Discord bot application
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wazabz_discord_bot
    restart: unless-stopped
    environment:
      # Discord configuration
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      GUILD_ID: ${GUILD_ID:-}
      
      # MongoDB configuration
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password}@mongodb:27017/${MONGO_DATABASE:-wazabz-discord-bot}?authSource=admin
      
      # Application configuration
      PORT: ${PORT:-3000}
      NODE_ENV: production
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - wazabz_network
    volumes:
      # Mount logs directory for persistent logging
      - ./logs:/app/logs

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  wazabz_network:
    driver: bridge